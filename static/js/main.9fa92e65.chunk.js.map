{"version":3,"sources":["types/SortType.ts","components/GoodItem/GoodItem.tsx","components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodItem","good","GoodList","goods","map","goodsFromServer","App","useState","NONE","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","ALPHABETICALLY","localeCompare","LENGTH","length","reverse","getPreparedGoods","showResetBtn","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,2DAAAA,K,gCAAAA,E,gBAAAA,E,aAAAA,M,gBCMCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,ICAbC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCDpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAAmBR,EAASS,MAAxD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAjCR,SACEV,EADF,GAMa,IAHTM,EAGQ,EAHRA,OACAE,EAEQ,EAFRA,WAGIG,EAAuB,YAAOX,GAoBpC,OAlBIM,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKV,EAASmB,eACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,KAAKtB,EAASS,KACd,QACE,OAAO,MAKXG,GACFG,EAAcQ,UAGTR,EAMwBS,CAC7BlB,EACA,CACEI,SACAE,eAIEa,EAAef,IAAWV,EAASS,MAAQG,EAEjD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAWV,EAASmB,gBAAkB,YACnES,QAAS,kBAAMjB,EAAUX,EAASmB,iBAHpC,iCAQA,wBACEQ,KAAK,SACLD,UAAS,4BAAuBhB,IAAWV,EAASqB,QAAU,YAC9DO,QAAS,kBAAMjB,EAAUX,EAASqB,SAHpC,4BAQA,wBACEM,KAAK,SACLD,UAAS,6BAAwBd,GAAc,YAC/CgB,QAAS,kBAAMf,GAAeD,IAHhC,qBAQCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAUX,EAASS,MACnBI,GAAc,IALlB,sBAaJ,cAAC,EAAD,CAAUT,MAAOU,QCvGvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9fa92e65.chunk.js","sourcesContent":["export enum SortType {\n  ALPHABETICALLY = 'alphabetically',\n  LENGTH = 'length',\n  NONE = 'none',\n}\n","import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const GoodItem: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\" key={good}>\n    {good}\n  </li>\n);\n","import React from 'react';\nimport { GoodItem } from '../GoodItem/GoodItem';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodItem good={good} key={good} />\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { PreparingOptions } from './types/PreparingOptions';\nimport { SortType } from './types/SortType';\n\nimport { GoodList } from './components/GoodList/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: string[],\n  {\n    sortBy,\n    isReversed,\n  }: PreparingOptions,\n): string[] {\n  const preparedGoods: string[] = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        case SortType.NONE:\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType>(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods: string[] = getPreparedGoods(\n    goodsFromServer,\n    {\n      sortBy,\n      isReversed,\n    },\n  );\n\n  const showResetBtn = sortBy !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortBy !== SortType.ALPHABETICALLY && 'is-light'}`}\n          onClick={() => setSortBy(SortType.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortBy !== SortType.LENGTH && 'is-light'}`}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {showResetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}